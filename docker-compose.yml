version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - be-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - be-network
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "USER_CREATED:1:1,USER_CHANGED:1:1,USER_DELETED:1:1,FILE_UPLOADED:1:1,FILE_DELETED:1:1,METADATA_EXTRACTED:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  elasticsearch:
    image: bitnami/elasticsearch:6-master
    volumes:
      - elastic_data:/bitnami
    networks:
      - be-network

  user-db:
    image: mysql:8.0
    volumes:
       - user_data:/var/lib/mysql
    networks:
      - be-network
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: findit

  file-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: fileservice
    networks:
      - be-network
    volumes:
      - file_data:/var/lib/mysql

  file-service:
    build: ./file-service
    depends_on:
      - file-db
      - kafka
    labels:
      - "api_routes=/file"
      - "secure=yes"
    networks:
      - be-network
    environment:
      HTTP_HOST: 8081
      KAFKA_HOST: kafka:9092
      DB_HOST: file-db
      DB_PORT: 3306
      DB_NAME: fileservice
      DB_USER: user
      DB_PASSWORD: password
      AWS_ACCESS_KEY: AKIAJXB2DYB2EF5SBNCA
      AWS_SECRET_ACCESS_KEY: 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
      AWS_BUCKET: findit.zaunermax.at
      AWS_REGION: eu-west-1

  user-service:
    build: ./user-service
    depends_on:
      - user-db
      - kafka
    labels:
      - "api_routes=/login;/signup;/users;/roles;/user;/role"
      - "secure=no"
    networks:
      - be-network
    environment:
      HTTP_HOST: 8081
      KAFKA_HOST: kafka:9092
      JWT_SECRET: mysupersecret
      DB_HOST: user-db
      DB_PORT: 3306
      DB_NAME: findit
      DB_USER: user
      DB_PASSWORD: password

  fulltext-service:
    build: ./fulltext-service
    depends_on:
      - kafka
      - elasticsearch
    labels:
      - "api_routes=/search"
      - "secure=yes"
    networks:
      - be-network
    environment:
      HTTP_HOST: 8082
      KAFKA_HOST: kafka:9092
      ELASTIC_URL: elasticsearch
      ELASTIC_LOG_LEVEL: trace

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      HTTP_HOST: 8080
      JWT_SECRET: mysupersecret
      LETSENCRYPT_HOST: finditapi.zaunermax.at
      LETSENCRYPT_EMAIL: zaunermax@gmail.com
      VIRTUAL_HOST: finditapi.zaunermax.at
      VIRTUAL_PORT: 8080
    networks:
      - be-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  file_data:
  user_data:
  elastic_data:
networks:
  be-network:
